// Generated by CoffeeScript 1.9.1
angular.module("perform").service("Utils", [
  "$rootScope", "$window", function($rootScope, $window) {
    var base, base1;
    if ((base = String.prototype).startswith == null) {
      base.startswith = function(s) {
        return this.slice(0, s.length) === s;
      };
    }
    if ((base1 = String.prototype).endswith == null) {
      base1.endswith = function(s) {
        return s === '' || this.slice(-s.length) === s;
      };
    }
    String.prototype.lower = function() {
      return this.toLowerCase();
    };
    this.browser = (function() {
      var M, tem, ua;
      ua = navigator.userAgent;
      tem = void 0;
      M = ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || [];
      if (/trident/i.test(M[1])) {
        tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
        return "IE " + (tem[1] || "");
      }
      if (M[1] === "Chrome") {
        tem = ua.match(/\bOPR\/(\d+)/);
        if (tem != null) {
          return "Opera " + tem[1];
        }
      }
      M = (M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, "-?"]);
      if ((tem = ua.match(/version\/(\d+)/i)) != null) {
        M.splice(1, 1, tem[1]);
      }
      return M.join(" ");
    })();
    this.hideBrowserBanner = function() {
      return $rootScope.showTopBanner = {
        opacity: 0
      };
    };
    this.showBrowserBanner = function() {
      this.bannerMsg = "You're using an unsupported browser. Some features may not work correctly.";
      return $rootScope.showTopBanner = {
        opacity: 1
      };
    };
    $rootScope.showLoading = false;
    this.showLoading = function() {
      return $rootScope.showLoading = true;
    };
    this.hideLoading = function() {
      return $rootScope.showLoading = false;
    };
    this.localtime = function(dt) {
      return moment.tz(dt, 'UTC').tz(jstz.determine().name());
    };
    $rootScope.preventNavigation = false;
    this.showPreventNavigation = function() {
      $rootScope.preventNavigation = true;
      return $window.onbeforeunload = function() {
        return "You may lose recent changes by navigating away.";
      };
    };
    this.hidePreventNavigation = function() {
      $rootScope.preventNavigation = false;
      return $window.onbeforeunload = null;
    };
    this.showConnectionLost = function() {
      'Show a banner that provides the user a way to reload the page';
      return $rootScope.showConnectionLostBanner = {
        opacity: 1
      };
    };
    this.hideConnectionLost = function() {
      'Show a banner that provides the user a way to reload the page';
      return $rootScope.showConnectionLostBanner = {
        opacity: 0
      };
    };
  }
]);
