// Generated by CoffeeScript 1.8.0
"use strict";
angular.module("perform").directive("changebg", [
  "$interval", "Colors", function($interval, Colors) {
    return {
      restrict: "A",
      templateUrl: 'static/js/directives/changebg.html',
      replace: true,
      link: function(scope, element, attrs) {
        var hide, isActive, update;
        scope.timeout = 500;
        scope.index = 0;
        scope.bar1 = angular.element('.bar1', element);
        scope.bar2 = angular.element('.bar2', element);
        scope.expand = false;
        isActive = function() {
          return scope.$eval(attrs.changebg);
        };
        update = function() {
          var newColor;
          if (scope.expand) {
            scope.bar1.attr('style', "background-color: " + scope.color);
            scope.bar2.attr('style', "width: 0%; margin-left: 50%; background-color: rgba(0,0,0,0)");
            return scope.expand = false;
          } else {
            newColor = Colors.color();
            while (newColor === scope.color) {
              newColor = Colors.color();
            }
            scope.color = newColor;
            scope.bar2.attr('style', "width: 100%; margin-left: 0%; background-color: " + scope.color);
            return scope.expand = true;
          }
        };
        hide = function() {
          scope.index = 0;
          scope.bar2.attr('style', "width: 0%; margin-left: 50%; background-color: rgba(0,0,0,0)");
          return scope.bar1.attr('style', "background-color: rgba(0,0,0,0)");
        };
        scope.$watch(isActive, function(newValue, oldValue) {
          if (!newValue) {
            $interval.cancel(scope.promise);
            delete scope.promise;
            return hide();
          } else {
            if (!(scope != null ? scope.promise : void 0)) {
              scope.promise = $interval(function() {
                return update();
              }, scope.timeout);
              return scope.bar1.attr('style', "background-color: rgba(0,0,0,0)");
            }
          }
        }, true);
      }
    };
  }
]);
