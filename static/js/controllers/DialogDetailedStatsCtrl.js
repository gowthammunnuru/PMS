// Generated by CoffeeScript 1.9.1
angular.module("perform").controller("DialogDetailedStatsCtrl", [
  "$scope", "$state", "$modal", "$modalInstance", "user2dict", "users", "dept_reviews", "dept", "status", "review_rname", "review_year", "review_type", function($scope, $state, $modal, $modalInstance, user2dict, users, reviews, dept, status, review_rname, review_year, review_type) {
    var found_review, i, j, len, len1, r, ref, ref1, ref10, ref11, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, u, x;
    $scope.messages = "something only re";
    $scope.dept = dept;
    $scope.reviews = reviews;
    $scope.users = users;
    $scope.status = status;
    $scope.header_text = "";
    $scope.review_rname = review_rname;
    $scope.review_year = review_year;
    $scope.review_type = review_type;
    $scope.filtered_users = [];
    if ($scope.review_type === "review") {
      $scope.reviewsGroupedByStatus = _.groupBy($scope.reviews, function(x) {
        return x.reviews.change_type;
      });
    } else if ($scope.review_type === "self-review") {
      $scope.reviewsGroupedByStatus = _.groupBy($scope.reviews, function(x) {
        return x.selfReviews.change_type;
      });
    }
    for (i = 0, len = users.length; i < len; i++) {
      u = users[i];
      found_review = false;
      if (reviews) {
        for (j = 0, len1 = reviews.length; j < len1; j++) {
          r = reviews[j];
          if (r.uid === u) {
            console.log(" review found for: ", r.uid);
            found_review = r;
            break;
          }
        }
      }
      if (status === "UNASSIGNED") {
        console.log(" for: ", u);
        if ($scope.review_type === "review" && (!found_review || ((ref = found_review.reviews.change_type) === 'UNASSIGNED' || ref === 'SET_TEMPLATE' || ref === 'SET_REVIEWER'))) {
          $scope.filtered_users.push(u);
        } else if ($scope.review_type === "self-review" && (!found_review || ((ref1 = found_review.selfReviews.change_type) === 'UNASSIGNED' || ref1 === 'SET_TEMPLATE' || ref1 === 'SET_REVIEWER'))) {
          $scope.filtered_users.push(u);
        }
        $scope.header_text = "Reviewer unassigned";
      } else if (status === "SETUP_DONE") {
        if ($scope.review_type === "review" && found_review && ((ref2 = found_review.reviews.change_type) === 'SETUP_DONE')) {
          $scope.filtered_users.push(u);
        } else if ($scope.review_type === "self-review" && found_review && ((ref3 = found_review.selfReviews.change_type) === 'SETUP_DONE')) {
          $scope.filtered_users.push(u);
        }
        $scope.header_text = "Not yet started";
      } else if (status === "REVIEW_DRAFT") {
        if ($scope.review_type === "review" && found_review && ((ref4 = found_review.reviews.change_type) === 'REVIEW_DRAFT')) {
          $scope.filtered_users.push(u);
        } else if ($scope.review_type === "self-review" && found_review && ((ref5 = found_review.selfReviews.change_type) === 'REVIEW_DRAFT')) {
          $scope.filtered_users.push(u);
        }
        $scope.header_text = "In progress";
      } else if (status === "COMMIT_REVIEW") {
        if ($scope.review_type === "review" && found_review && ((ref6 = found_review.reviews.change_type) === 'COMMIT_REVIEW')) {
          $scope.filtered_users.push(u);
          $scope.header_text = "Committed";
        } else if ($scope.review_type === "self-review" && found_review && ((ref7 = found_review.selfReviews.change_type) === 'COMMIT_REVIEW')) {
          $scope.filtered_users.push(u);
          $scope.header_text = "Completed";
        }
      } else if (status === "READY2PUBLISH") {
        if ($scope.review_type === "review" && found_review && ((ref8 = found_review.reviews.change_type) === 'READY2PUBLISH')) {
          $scope.filtered_users.push(u);
          $scope.header_text = "Ready to publish";
        } else if ($scope.review_type === "self-review" && found_review && ((ref9 = found_review.selfReviews.change_type) === 'READY2PUBLISH')) {
          $scope.filtered_users.push(u);
          $scope.header_text = "Ready to publish";
        }
      } else if (status === "PUBLISH_REVIEW") {
        if (found_review && ((ref10 = found_review.reviews.change_type) === 'PUBLISH_REVIEW')) {
          $scope.filtered_users.push(u);
        }
        $scope.header_text = "Published";
      } else if (status === "ACKNOWLEDGE_REVIEW") {
        if (found_review && ((ref11 = found_review.reviews.change_type) === 'ACKNOWLEDGE_REVIEW')) {
          $scope.filtered_users.push(u);
        }
        $scope.header_text = "Acknowledged";
      }
    }
    if (!($scope.status in $scope.reviewsGroupedByStatus)) {
      $scope.reviewsGroupedByStatus[$scope.status] = [];
    }
    $scope.inactive_users = _.difference((function() {
      var k, len2, ref12, results;
      ref12 = $scope.reviewsGroupedByStatus[$scope.status];
      results = [];
      for (k = 0, len2 = ref12.length; k < len2; k++) {
        x = ref12[k];
        results.push(x.uid);
      }
      return results;
    })(), $scope.filtered_users);
    $scope.ok = function() {
      return $modalInstance.close();
    };
    $scope.cancel = function() {
      return $modalInstance.dismiss('cancel');
    };
    $scope.getFullName = function(uid) {
      return user2dict[uid][0].cn;
    };
    $scope.getEmployeeNumber = function(uid) {
      return user2dict[uid][0].employeeNumber;
    };
    $scope.goToUserReview = function(uid) {
      var state;
      if ($scope.review_type === "review") {
        state = 'user_review_year.start';
      } else if ($scope.review_type === "self-review") {
        state = 'user_self_review_year.start';
      }
      if (status !== "UNASSIGNED") {
        $state.go(state, {
          uid: uid,
          review_year: $scope.review_year,
          review_name: $scope.review_rname
        });
        return $modalInstance.close();
      }
    };
    $scope.filtered_users = _.sortBy($scope.filtered_users, (function(_this) {
      return function(x) {
        return $scope.getFullName(x);
      };
    })(this));
  }
]);
